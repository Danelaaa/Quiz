{"ast":null,"code":"import { interval } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/question.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../change-bg.directive\";\nfunction QuestionComponent_ng_container_10_ol_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ol\")(1, \"li\", 24);\n    i0.ɵɵlistener(\"click\", function QuestionComponent_ng_container_10_ol_18_Template_li_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const option_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.answer(ctx_r4.currentQuestion + 1, option_r3));\n    });\n    i0.ɵɵelementStart(2, \"div\", 25);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"isCorrect\", option_r3.correct);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r3.text, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"width\": a0\n  };\n};\nfunction QuestionComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 9)(2, \"div\", 10)(3, \"h5\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 11)(6, \"span\", 7);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 12)(9, \"h5\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"div\", 13);\n    i0.ɵɵelement(12, \"div\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 15)(14, \"div\", 1)(15, \"h3\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"div\", 16);\n    i0.ɵɵtemplate(18, QuestionComponent_ng_container_10_ol_18_Template, 4, 2, \"ol\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 18)(20, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function QuestionComponent_ng_container_10_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.previousQuestion());\n    });\n    i0.ɵɵelement(21, \"i\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function QuestionComponent_ng_container_10_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.resetQuiz());\n    });\n    i0.ɵɵelement(23, \"i\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function QuestionComponent_ng_container_10_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.nextQuestion());\n    });\n    i0.ɵɵelement(25, \"i\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.points, \" Points\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"Question \", ctx_r0.currentQuestion + 1, \" of \", ctx_r0.questionList.length, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.counter, \" sec \\u23F1\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(8, _c0, ctx_r0.progress + \"%\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.questionList[ctx_r0.currentQuestion] == null ? null : ctx_r0.questionList[ctx_r0.currentQuestion].questionText);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.questionList[ctx_r0.currentQuestion] == null ? null : ctx_r0.questionList[ctx_r0.currentQuestion].options);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.currentQuestion === 0);\n  }\n}\nfunction QuestionComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 26);\n    i0.ɵɵelement(2, \"img\", 27);\n    i0.ɵɵelementStart(3, \"div\", 28)(4, \"h3\");\n    i0.ɵɵtext(5, \"\\u10D2\\u10D8\\u10DA\\u10DD\\u10EA\\u10D0\\u10D7!! \");\n    i0.ɵɵelement(6, \"br\");\n    i0.ɵɵtext(7, \"\\u10D7\\u10E5\\u10D5\\u10D4\\u10DC \\u10D3\\u10D0\\u10D0\\u10E1\\u10E0\\u10E3\\u10DA\\u10D4\\u10D7 \\u10E5\\u10D5\\u10D8\\u10D6\\u10D8 \");\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵtext(9, \"\\u10E5\\u10D5\\u10D4\\u10DB\\u10DD\\u10D7 \\u10D0\\u10E0\\u10D8\\u10E1 \\u10D7\\u10E5\\u10D5\\u10D4\\u10DC\\u10D8 \\u10E8\\u10D4\\u10D3\\u10D4\\u10D2\\u10D8\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"p\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"p\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵtextInterpolate1(\"Total Question Attempted : \", ctx_r1.questionList.length, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total Correct Answered : \", ctx_r1.correctAnswer, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total Wrong Answered : \", ctx_r1.inCorrectAnswer, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Your Score : \", ctx_r1.points, \" Points \");\n  }\n}\nexport class QuestionComponent {\n  constructor(questionService) {\n    this.questionService = questionService;\n    this.name = \"\";\n    this.questionList = [];\n    this.currentQuestion = 0;\n    this.points = 0;\n    this.counter = 60;\n    this.correctAnswer = 0;\n    this.inCorrectAnswer = 0;\n    this.progress = \"0\";\n    this.isQuizCompleted = false;\n  }\n  ngOnInit() {\n    this.name = localStorage.getItem(\"name\");\n    this.getAllQuestions();\n    this.startCounter();\n  }\n  getAllQuestions() {\n    this.questionService.getQuestionJson().subscribe(res => {\n      this.questionList = res.questions;\n    });\n  }\n  nextQuestion() {\n    this.currentQuestion++;\n  }\n  previousQuestion() {\n    this.currentQuestion--;\n  }\n  answer(currentQno, option) {\n    if (currentQno === this.questionList.length) {\n      this.isQuizCompleted = true;\n      this.stopCounter();\n    }\n    if (option.correct) {\n      this.points += 10;\n      this.correctAnswer++;\n      setTimeout(() => {\n        this.currentQuestion++;\n        this.resetCounter();\n        this.getProgressPercent();\n      }, 1000);\n    } else {\n      setTimeout(() => {\n        this.currentQuestion++;\n        this.inCorrectAnswer++;\n        this.resetCounter();\n        this.getProgressPercent();\n      }, 1000);\n      this.points -= 10;\n    }\n  }\n  startCounter() {\n    this.interval$ = interval(1000).subscribe(val => {\n      this.counter--;\n      if (this.counter === 0) {\n        this.currentQuestion++;\n        this.counter = 60;\n        this.points -= 10;\n      }\n    });\n    setTimeout(() => {\n      this.interval$.unsubscribe();\n    }, 600000);\n  }\n  stopCounter() {\n    this.interval$.unsubscribe();\n    this.counter = 0;\n  }\n  resetCounter() {\n    this.stopCounter();\n    this.counter = 60;\n    this.startCounter();\n  }\n  resetQuiz() {\n    this.resetCounter();\n    this.getAllQuestions();\n    this.points = 0;\n    this.counter = 60;\n    this.currentQuestion = 0;\n    this.progress = \"0\";\n  }\n  getProgressPercent() {\n    this.progress = (this.currentQuestion / this.questionList.length * 100).toString();\n    return this.progress;\n  }\n}\nQuestionComponent.ɵfac = function QuestionComponent_Factory(t) {\n  return new (t || QuestionComponent)(i0.ɵɵdirectiveInject(i1.QuestionService));\n};\nQuestionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuestionComponent,\n  selectors: [[\"app-question\"]],\n  decls: 12,\n  vars: 3,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"card\"], [1, \"d-flex\", \"justify-content-between\", \"p-3\"], [1, \"image\"], [\"src\", \"https://img.icons8.com/color/96/000000/angularjs.png\", \"width\", \"90\", \"alt\", \"logo\"], [1, \"quiz-header\"], [2, \"font-family\", \"cursive\"], [2, \"font-style\", \"italic\"], [4, \"ngIf\"], [1, \"d-flex\", \"justify-content-around\", \"py-3\"], [1, \"score\"], [1, \"question-remain\"], [1, \"timer\"], [1, \"progress\", \"mb-3\"], [\"role\", \"progressbar\", \"aria-valuenow\", \"25\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"progress-bar-striped\", \"bg-success\", 3, \"ngStyle\"], [1, \"question\"], [1, \"options\"], [4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"btn\", 3, \"disabled\", \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"text-primary\", \"fa-chevron-left\", \"fa-3x\"], [1, \"btn\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-refresh\", \"text-primary\", \"fa-3x\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"text-primary\", \"fa-chevron-right\", \"fa-3x\"], [3, \"click\"], [\"appChangeBg\", \"\", 1, \"card\", 3, \"isCorrect\"], [1, \"row\", \"d-flex\", \"justify-content-between\"], [\"src\", \"https://icon-library.com/images/celebration-icon-png/celebration-icon-png-7.jpg\", \"alt\", \"\", 1, \"img-fluid\", \"col-sm-12\", \"mx-auto\", 2, \"width\", \"50%\"], [1, \"result\", \"text-center\", \"col-md-6\", \"col-sm-12\"]],\n  template: function QuestionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"h4\", 6);\n      i0.ɵɵtext(7, \"Angular & TypeScript Quiz!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"span\", 7);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(10, QuestionComponent_ng_container_10_Template, 26, 10, \"ng-container\", 8);\n      i0.ɵɵtemplate(11, QuestionComponent_ng_container_11_Template, 18, 4, \"ng-container\", 8);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate1(\"Welcome \", ctx.name, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isQuizCompleted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isQuizCompleted);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.NgStyle, i3.ChangeBgDirective],\n  styles: [\".card[_ngcontent-%COMP%] {\\n  max-width: 800px;\\n  margin: 0 auto;\\n  padding: 10px;\\n}\\n\\nli[_ngcontent-%COMP%] {\\n  list-style-type: none;\\n  cursor: pointer;\\n  margin: 10px 0;\\n}\\n\\nli[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:hover {\\n  border: 1px solid blue;\\n}\\n\\nol[_ngcontent-%COMP%] {\\n  padding: 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXVlc3Rpb24vcXVlc3Rpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtFQUNBLGNBQUE7RUFDQSxhQUFBO0FBQ0o7O0FBRUE7RUFDSSxxQkFBQTtFQUNBLGVBQUE7RUFDQSxjQUFBO0FBQ0o7O0FBRUE7RUFDSSxzQkFBQTtBQUNKOztBQUVBO0VBQ0ksVUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xuICAgIG1heC13aWR0aDogODAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcGFkZGluZzogMTBweDtcbn1cblxubGkge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgbWFyZ2luOiAxMHB4IDA7XG59XG5cbmxpIC5jYXJkOmhvdmVyIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibHVlO1xufVxuXG5vbCB7XG4gICAgcGFkZGluZzogMDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["interval","i0","QuestionComponent","constructor","questionService","ngOnInit","name","localStorage","getItem","getAllQuestions","startCounter","getQuestionJson","subscribe","res","questionList","questions","nextQuestion","currentQuestion","previousQuestion","answer","currentQno","option","length","isQuizCompleted","stopCounter","correct","points","correctAnswer","setTimeout","resetCounter","getProgressPercent","inCorrectAnswer","interval$","val","counter","unsubscribe","resetQuiz","progress","toString","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Lukexsa\\Desktop\\Angular-Quiz\\quiz\\src\\app\\question\\question.component.ts","C:\\Users\\Lukexsa\\Desktop\\Angular-Quiz\\quiz\\src\\app\\question\\question.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { QuestionService } from '../service/question.service';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss']\n})\nexport class QuestionComponent implements OnInit {\n\n  public name: string = \"\";\n  public questionList: any = [];\n  public currentQuestion: number = 0;\n  public points: number = 0;\n  counter = 60;\n  correctAnswer: number = 0;\n  inCorrectAnswer: number = 0;\n  interval$: any;\n  progress: string = \"0\";\n  isQuizCompleted : boolean = false;\n  constructor(private questionService: QuestionService) { }\n\n  ngOnInit(): void {\n    this.name = localStorage.getItem(\"name\")!;\n    this.getAllQuestions();\n    this.startCounter();\n  }\n  getAllQuestions() {\n    this.questionService.getQuestionJson()\n      .subscribe(res => {\n        this.questionList = res.questions;\n      })\n  }\n  nextQuestion() {\n    this.currentQuestion++;\n  }\n  previousQuestion() {\n    this.currentQuestion--;\n  }\n  answer(currentQno: number, option: any) {\n\n    if(currentQno === this.questionList.length){\n      this.isQuizCompleted = true;\n      this.stopCounter();\n    }\n    if (option.correct) {\n      this.points += 10;\n      this.correctAnswer++;\n      setTimeout(() => {\n        this.currentQuestion++;\n        this.resetCounter();\n        this.getProgressPercent();\n      }, 1000);\n\n\n    } else {\n      setTimeout(() => {\n        this.currentQuestion++;\n        this.inCorrectAnswer++;\n        this.resetCounter();\n        this.getProgressPercent();\n      }, 1000);\n\n      this.points -= 10;\n    }\n  }\n  startCounter() {\n    this.interval$ = interval(1000)\n      .subscribe(val => {\n        this.counter--;\n        if (this.counter === 0) {\n          this.currentQuestion++;\n          this.counter = 60;\n          this.points -= 10;\n        }\n      });\n    setTimeout(() => {\n      this.interval$.unsubscribe();\n    }, 600000);\n  }\n  stopCounter() {\n    this.interval$.unsubscribe();\n    this.counter = 0;\n  }\n  resetCounter() {\n    this.stopCounter();\n    this.counter = 60;\n    this.startCounter();\n  }\n  resetQuiz() {\n    this.resetCounter();\n    this.getAllQuestions();\n    this.points = 0;\n    this.counter = 60;\n    this.currentQuestion = 0;\n    this.progress = \"0\";\n\n  }\n  getProgressPercent() {\n    this.progress = ((this.currentQuestion / this.questionList.length) * 100).toString();\n    return this.progress;\n\n  }\n}\n","<div class=\"container mt-5\">\n    <div class=\"card\">\n        <div class=\"d-flex justify-content-between p-3\">\n            <div class=\"image\">\n                <img src=\"https://img.icons8.com/color/96/000000/angularjs.png\" width=\"90\" alt=\"logo\">\n            </div>\n            <div class=\"quiz-header\">\n                <h4 style=\"font-family: cursive;\">Angular & TypeScript Quiz!</h4>\n                <span style=\"font-style: italic;\">Welcome {{name}}</span>\n            </div>\n        </div>\n\n        <ng-container *ngIf=\"!isQuizCompleted\">\n            <div class=\"d-flex justify-content-around py-3\">\n                <div class=\"score\">\n                    <h5>{{points}} Points</h5>\n                </div>\n                <div class=\"question-remain\">\n                    <span style=\"font-style: italic;\">Question {{currentQuestion+1}} of {{questionList.length}}</span>\n                </div>\n                <div class=\"timer\">\n                    <h5>{{counter}} sec ⏱</h5>\n                </div>\n            </div>\n            <div class=\"progress mb-3\">\n                <div class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\" [ngStyle]=\"{'width':progress+'%'}\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n            </div>\n            <div class=\"question\">\n                <div class=\"card\">\n                    <h3>{{questionList[currentQuestion]?.questionText}}</h3>\n                </div>\n            </div>\n            <div class=\"options\">\n                <ol *ngFor=\"let option of questionList[currentQuestion]?.options\">\n                    <li (click)=\"answer(currentQuestion+1,option)\">\n                        <div appChangeBg [isCorrect]=\"option.correct\" class=\"card\">\n                            {{option.text}}\n                        </div>\n                    </li>\n\n                </ol>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n                <button [disabled]=\"currentQuestion===0\" class=\"btn\" (click)=\"previousQuestion()\"><i class=\"fa text-primary fa-chevron-left fa-3x\" aria-hidden=\"true\"></i></button>\n                <button class=\"btn\" (click)=\"resetQuiz()\"><i class=\"fa fa-refresh text-primary fa-3x\" aria-hidden=\"true\"></i></button>\n                <button class=\"btn\" (click)=\"nextQuestion()\"><i class=\"fa text-primary fa-chevron-right fa-3x\" aria-hidden=\"true\"></i></button>\n            </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"isQuizCompleted\">\n            <div class=\"row d-flex justify-content-between\">\n                <img style=\"width: 50%;\" class=\"img-fluid col-sm-12 mx-auto\" src=\"https://icon-library.com/images/celebration-icon-png/celebration-icon-png-7.jpg\" alt=\"\">\n                <div class=\"result text-center col-md-6 col-sm-12\">\n                    <h3>გილოცათ!! <br>თქვენ დაასრულეთ ქვიზი <br>ქვემოთ არის თქვენი შედეგი</h3>\n                    <p>Total Question Attempted : {{questionList.length}} </p>\n                    <p>Total Correct Answered : {{correctAnswer}} </p>\n                    <p>Total Wrong Answered : {{inCorrectAnswer}} </p>\n                    <p>Your Score : {{points}} Points </p>\n                </div>\n            </div>\n        </ng-container>\n\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}